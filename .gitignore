# =============================================================================
# RAG SERVER PROJECT - .gitignore
# =============================================================================
# Этот файл исключает все персональные данные и скачанную документацию,
# чтобы новые разработчики могли легко настроить проект под себя.
#
# ВАЖНО: После клонирования репозитория:
# 1. Скопируйте config.example.yaml в config.local.yaml
# 2. Настройте свои LLM параметры в config.local.yaml
# 3. Запустите скрипты для скачивания документации (см. README.md)
# =============================================================================

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/
*.swp
*.swo
*~

# VS Code
.vscode/

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# =============================================================================
# RAG SERVER SPECIFIC EXCLUSIONS
# =============================================================================

# ChromaDB - персональная векторная база данных
# Каждый разработчик создает свою базу при первом запуске
chroma_storage/

# Логи - временные файлы
logs/
*.log

# Персональные конфигурации LLM
# Используйте config.example.yaml как шаблон для создания config.local.yaml
config.local.yaml
*.local.yaml
*.personal.yaml
*.private.yaml

# Claude AI настройки (если используется)
.claude/
CLAUDE.md
*.claude.*
AI_*.md

# Node modules (для MCP сервера)
node_modules/

# =============================================================================
# ДОКУМЕНТАЦИЯ ФРЕЙМВОРКОВ - ИСКЛЮЧАЕТСЯ ПОЛНОСТЬЮ
# =============================================================================
# Эти папки содержат скачанную документацию фреймворков.
# У каждого разработчика будет своя версия документации.
# 
# Для скачивания документации используйте:
# - python update_docs.py --framework vue
# - python update_docs.py --framework laravel
# - python update_docs.py --framework filament
# - python update_docs.py --framework alpine
# - python update_docs.py --framework tailwindcss
# - python update_docs.py --all  # для всех фреймворков

documentation/alpine_docs/
documentation/filament_docs/
documentation/laravel_docs/
documentation/tailwindcss_docs/
documentation/vue_docs/

# Сохраняем структуру папки documentation, но исключаем содержимое
!documentation/
!documentation/.gitkeep
!documentation/README.md

# =============================================================================
# MEMORY BANK - ПЕРСОНАЛЬНЫЕ ЗАМЕТКИ И КОНТЕКСТ
# =============================================================================
# Memory Bank содержит персональные заметки, контекст проекта и историю работы.
# Каждый разработчик должен создать свой Memory Bank.

memory-bank/*
mcp-server/memory-bank/*

# Сохраняем структуру, но исключаем персональные данные
!memory-bank/.gitkeep
!memory-bank/README.md
!mcp-server/memory-bank/.gitkeep

# =============================================================================
# ВРЕМЕННЫЕ И ТЕСТОВЫЕ ФАЙЛЫ
# =============================================================================

# Временные файлы
*.tmp
*.temp
*.bak
*.backup

# Тестовые файлы (создаются автоматически при разработке)
test-*.txt
test-*.js
test-*.py
test-*.md
*-test.*
*.test.*

# Файлы отладки
debug-*.log
debug-*.txt
*.debug

# =============================================================================
# ДОПОЛНИТЕЛЬНЫЕ ИСКЛЮЧЕНИЯ ДЛЯ РАЗРАБОТКИ
# =============================================================================

# Персональные скрипты разработчика
personal/
private/
local/

# Экспериментальные файлы
experiments/
playground/
sandbox/

# Резервные копии
*.orig
*~

# Файлы редакторов
*.sublime-project
*.sublime-workspace
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# Системные файлы Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Системные файлы Linux
*~
.directory
.Trash-*

# =============================================================================
# ВАЖНЫЕ ФАЙЛЫ - НЕ ИСКЛЮЧАТЬ
# =============================================================================
# Эти файлы должны быть в репозитории:
# - config.example.yaml (шаблон конфигурации)
# - config.yaml (базовая конфигурация)
# - requirements.txt (зависимости Python)
# - package.json (зависимости Node.js для MCP сервера)
# - README.md (документация проекта)
# - install.sh (скрипт установки)
# - update_docs.py (скрипт обновления документации)
# =============================================================================
