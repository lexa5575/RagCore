#!/bin/bash
# Smart Documentation Manager - Installation Script
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–º–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ Installing RAG Server + Memory Bank Integration..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 not found. Please install Python 3.8+ and try again."
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
echo "‚úÖ Python $PYTHON_VERSION found"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js not found. Please install Node.js 16+ and try again."
    exit 1
fi

NODE_VERSION=$(node --version)
echo "‚úÖ Node.js $NODE_VERSION found"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üì¶ Installing Python dependencies..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -d "venv" ]; then
    echo "üîß Creating Python virtual environment..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîß Activating virtual environment..."
source venv/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip3 install -r requirements.txt

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üì¶ Installing Node.js dependencies..."
cd mcp-server
npm install
cd ..

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo ""
echo "üìÅ Creating necessary directories..."
mkdir -p chroma_storage
mkdir -p logs

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ LLM
echo ""
echo "‚öôÔ∏è  Setting up LLM configuration..."
if [ ! -f config.yaml ]; then
    if [ -f config.example.yaml ]; then
        cp config.example.yaml config.yaml
        echo "‚úÖ Created config.yaml from example"
    else
        echo "‚úÖ config.yaml will be created by update_docs.py"
    fi
    echo "‚ö†Ô∏è  IMPORTANT: Configure config.yaml for your LLM model!"
    echo "   Open config.yaml and change:"
    echo "   - model_name: to your model name"
    echo "   - api_url: to your LLM server address"
    echo "   - default_model: to your preferred model"
else
    echo "‚úÖ config.yaml already exists"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–æ–∫ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π
echo ""
echo "üîç Checking for existing documentation..."
python3 update_docs.py --scan

echo ""
echo "‚úÖ Installation completed!"
echo ""
echo "üéØ Next steps:"
echo "1. Add documentation folders to documentation/ directory"
echo "2. Run: python3 update_docs.py"
echo "3. Start RAG server: python3 rag_server.py"
echo "4. Start MCP server: cd mcp-server && npm run start:enhanced"
echo ""
echo "üí° Useful commands:"
echo "   python3 update_docs.py --scan    # Preview changes"
echo "   python3 update_docs.py           # Full synchronization"
echo "   python3 rag_server.py            # Start RAG server"
echo ""
echo "üìö Documentation: README.md"
